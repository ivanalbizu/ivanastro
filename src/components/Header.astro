---
import Button from "@components/Button.astro";
import { config } from "../config";

const { base = "" } = Astro.site
  ? { base: import.meta.env.BASE_URL }
  : { base: "" };

const { pathname } = Astro.url;
const pathSegment = (pathname.slice(1)).replace(/\/$/, '');
---

<header class="site-header">
  <div class="skip-to-content">
    <a href="#main-content">Saltar al contenido principal</a>
    <a href="#footer">Saltar a enlaces en pié de página</a>
  </div>
  <div class="header-content">
    <Button
      tag="button"
      variant="link"
      size="sm"
      class="mobile-only"
      id="hamburger-toggle"
      aria-label="Abrir menú de navegación"
      aria-expanded="false"
    >
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="24"
        height="24"
        viewBox="0 0 48 48"
        aria-hidden="true"
      >
        <path
          fill="none"
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="4"
          d="M7.95 11.95h32m-32 12h32m-32 12h32"></path>
      </svg>
      <span class="visually-hidden">Abrir menú de navegación</span>
    </Button>

    <div class="site-title">
      <a href={base}>
        {config.title}
      </a>
    </div>

    <div class="header-controls">
      <nav
        class="main-navigation"
        id="main-navigation"
        role="navigation"
        aria-label="Principal"
      >
        <ul class="nav-list">
          <li>
            <Button
              tag="button"
              variant="link"
              size="sm"
              class="close-menu"
              id="close-menu"
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="24"
                height="24"
                viewBox="0 0 48 48"
                aria-hidden="true"
              >
                <path
                  fill="currentColor"
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="4"
                  d="m8 8l32 32M8 40L40 8"></path>
              </svg>
              <span class="visually-hidden">Cerrar menú de navegación</span>
            </Button>
          </li>
          <li>
            <a
              href={base + "blog"}
              class:list={["nav-link", pathSegment == "blog" ? "active" : ""]}
              aria-current={pathSegment == 'blog' ? 'page' : null}
              >Blog</a>
          </li>
          <li>
            <a
              href={base + "categorias"}
              class:list={[
                "nav-link",
                pathSegment == "categorias" ? "active" : "",
              ]}
              aria-current={pathSegment == 'categorias' ? 'page' : null}
              >Categorías</a>
          </li>
          <li>
            <a
              href={base + "sobre-mi"}
              class:list={[
                "nav-link",
                pathSegment == "sobre-mi" ? "active" : "",
              ]}
              aria-current={pathSegment == 'sobre-mi' ? 'page' : null}
              >Sobre mí</a>
          </li>
          <li>
            <a
              href={base + "curriculum"}
              class:list={[
                "nav-link",
                pathSegment == "curriculum" ? "active" : "",
              ]}
              aria-current={pathSegment == 'curriculum' ? 'page' : null}
              >CV</a>
          </li>
        </ul>
      </nav>

      <div class="mobile-controls">
        <Button tag="button" variant="link" size="sm" id="theme-toggle">
          <svg
            class="sun-icon"
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            aria-hidden="true"
          >
            <circle cx="12" cy="12" r="5" stroke="currentColor" stroke-width="2"
            ></circle>
            <path
              d="M12 1v6m0 6v6m11-7h-6m-6 0H1"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"></path>
          </svg>
          <svg
            class="moon-icon"
            width="20"
            height="20"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            aria-hidden="true"
          >
            <path
              d="M21 12.79A9 9 0 1 1 11.21 3 A7 7 0 0 0 21 12.79z"
              stroke="currentColor"
              stroke-width="2"
              stroke-linejoin="round"></path>
          </svg>
          <span class="visually-hidden"
            >Activar / Desactivar el modo oscuro</span
          >
        </Button>
        <Button tag="button" variant="link" size="sm" id="font-size">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="24"
            height="24"
            viewBox="0 0 56 56"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            aria-hidden="true"
          >
            <path
              fill="currentColor"
              d="M27.578 45.297c1.172 0 1.781-.469 2.227-1.758l3.023-8.297h13.828l3 8.297c.469 1.29 1.055 1.758 2.227 1.758c1.265 0 2.11-.75 2.11-1.922c0-.398-.094-.75-.259-1.266L42.72 12.86c-.54-1.453-1.5-2.156-2.977-2.156s-2.437.703-2.953 2.133L25.773 42.133c-.187.515-.234.867-.234 1.265c0 1.172.773 1.899 2.04 1.899m6.399-13.64l5.671-15.774h.141l5.695 15.773ZM4.023 45.296c.938 0 1.594-.469 2.016-1.688l1.875-5.414h8.578l1.875 5.414c.422 1.243 1.078 1.688 2.04 1.688c1.171 0 1.991-.75 1.991-1.852c0-.398-.07-.82-.304-1.406l-6.985-18.562c-.492-1.36-1.453-2.227-2.93-2.227c-1.453 0-2.39.867-2.882 2.227L2.289 42.039c-.21.586-.281 1.008-.281 1.406c0 1.102.797 1.852 2.015 1.852m4.946-10.29l3.07-9.14h.305l3.094 9.14Z"
            ></path>
          </svg>
          <span class="visually-hidden">Cambiar tamaño de letra</span>
        </Button>
        <Button tag="button" variant="link" size="sm" id="search-toggle">
          <svg
            width="24"
            height="24"
            viewBox="0 0 24 24"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            aria-hidden="true"
          >
            <circle
              cx="11"
              cy="11"
              r="8"
              stroke="currentColor"
              stroke-width="2"
              fill="none"></circle>
            <path
              d="M21 21l-4.35-4.35"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"></path>
          </svg>
          <span class="visually-hidden">Abrir buscador de entradas</span>
        </Button>
      </div>
    </div>
  </div>
</header>

<search class="search-overlay" id="search-overlay">
  <div class="search-container">
    <div class="search-header">
      <input
        type="text"
        class="search-input"
        id="search-input"
        placeholder="Buscar artículos..."
        autocomplete="off"
      />
      <Button tag="button" variant="link" size="sm" id="search-close">
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="24"
          height="24"
          viewBox="0 0 48 48"
          aria-hidden="true"
        >
          <path
            fill="currentColor"
            stroke="currentColor"
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="4"
            d="m8 8l32 32M8 40L40 8"></path>
        </svg>
        <span class="visually-hidden">Cerrar búsqueda</span>
      </Button>
    </div>
  </div>
  <div
    class="search-results"
    id="search-results"
    role="region"
    aria-live="polite"
  >
  </div>
</search>

<script src="../assets/js/script.ts"></script>

<style lang="scss">
  .site-header {
    border-bottom: var(--border-width-md) solid var(--color-border);
    background-color: var(--color-surface);
    padding: calc(var(--grid-unit) * 2) 0;
    position: sticky;
    top: 0;
    z-index: 100;
  }

  .header-content {
    max-width: var(--max-width);
    margin-inline: auto;
    display: grid;
    grid-template-columns: auto auto 1fr;
    justify-content: space-between;
    align-items: center;
    gap: calc(var(--grid-unit) * 2);
    padding: 0 var(--content-padding);
  }

  .site-title a {
    display: flex;
    min-height: var(--target-size);
    align-items: center;
    font-family: var(--font-family-primary);
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.03em;
    color: var(--color-text-primary);
    padding: calc(var(--grid-unit) / 2) 0;
    transition:
      color var(--transition-duration-normal) ease,
      text-decoration var(--transition-duration-normal) ease;
    text-underline-offset: 6px;
    text-decoration-color: transparent;
    text-decoration-thickness: 2px;

    &.active,
    &:hover,
    &:focus {
      color: var(--color-interaction-default);
      text-decoration-color: revert;
    }
  }

  .header-controls {
    display: flex;
    align-items: center;
    gap: var(--grid-unit);
    justify-self: end;
  }

  .search-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    padding-inline: calc(var(--grid-unit) * 2);
    background: rgba(0, 0, 0, 0.8);
    z-index: 1000;
    opacity: 0;
    visibility: hidden;
    transition:
      opacity var(--transition-duration-slow) ease,
      visibility var(--transition-duration-slow) ease;
  }

  .search-overlay.active {
    opacity: 1;
    visibility: visible;
  }

  .search-container {
    max-width: 800px;
    margin: calc(var(--grid-unit) * 5) auto calc(var(--grid-unit) * 3) auto;
  }

  .search-header {
    display: flex;
    align-items: center;
    gap: calc(var(--grid-unit) * 2);
    background: var(--color-background);
    border: var(--border-width-md) solid var(--color-border);
    border-radius: 8px;
    padding: calc(var(--grid-unit) * 3);
    margin-block-end: calc(var(--grid-unit) * 5);
  }

  .search-input {
    flex: 1;
    font-family: var(--font-body);
    font-size: var(--fs-heading-6);
    color: var(--color-text-primary);
    padding: calc(var(--grid-unit) * 2) calc(var(--grid-unit) * 3);
    max-width: calc(100% - var(--target-size) - (var(--grid-unit) * 2));
  }

  .search-input::placeholder {
    color: var(--color-medium-gray);
  }

  .search-results {
    max-width: 800px;
    margin-inline: auto;
    max-height: 70vh;
    min-height: 40vh;
    overflow-y: auto;
    background: var(--color-background);
    border-radius: 8px;
    border: 1px solid var(--color-border);
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    padding: calc(var(--grid-unit) * 2) calc(var(--grid-unit) * 2.5)
      calc(var(--grid-unit) * 3) calc(var(--grid-unit) * 2.5);
    &:empty {
      display: none;
    }
  }

  :global(.search-result + .search-result) {
    margin-block-start: calc(var(--grid-unit) * 3);
  }

  /* Dark mode search category styles */
  :global([data-theme="dark"]) .search-category {
    background-color: var(--color-surface);
    color: var(--color-text-primary);
    border: 1px solid var(--color-border);
  }

  :global([data-theme="dark"]) .search-category:hover {
    background-color: var(--color-interaction-default);
    color: white;
    border-color: var(--color-interaction-default);
  }

  :global([data-theme="dark"]) .search-input {
    color: var(--color-black);
  }

  .search-no-results {
    padding: calc(var(--grid-unit) * 10) calc(var(--grid-unit) * 6);
    text-align: center;
  }

  .search-no-results p {
    color: var(--color-text-muted);
    font-style: italic;
    margin: 0;
    font-size: var(--fs-paragraph-1);
  }

  .nav-list {
    display: block;
    list-style-type: "";
    margin: 0;
    padding: 0;
    gap: var(--grid-unit);
    li {
      margin-block-end: 0;
    }
  }

  .close-menu {
    margin: calc(var(--grid-unit) * 2);
  }
  @media (min-width: 768px) {
    .nav-list {
      display: flex;
    }
    .close-menu {
      display: none !important;
    }
  }

  .mobile-controls {
    display: flex;
    align-items: center;
    gap: calc(var(--grid-unit));
    .btn {
      min-height: var(--target-size);
    }
  }

  @media (max-width: 767.98px) {
    .main-navigation {
      position: fixed;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      padding: var(--grid-unit);
      background-color: var(--color-background);
      z-index: 99;
      transform: translateX(-100%);
      transition:
        transform var(--transition-duration-slow) ease,
        visibility 0s var(--transition-duration-slow) ease;
      overflow-y: auto;
      visibility: hidden;
    }
  }
  .main-navigation.active {
    transform: translateX(0);
    visibility: visible;
    transition: transform var(--transition-duration-slow) ease;
  }
  :global(.is-resizing) {
    .main-navigation {
      transition: none;
    }
  }

  .mobile-nav-list {
    list-style-type: "";
    margin: 0;
    padding: calc(var(--grid-unit) * 4) 0;
  }

  .nav-link {
    display: flex;
    align-items: center;
    padding: calc(var(--grid-unit) * 3) calc(var(--grid-unit) * 4);
    font-family: var(--font-family-primary);
    font-weight: 700;
    font-size: var(--fs-heading-4);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    color: var(--color-text-primary);
    text-decoration-color: transparent;
    border-bottom: 1px solid var(--color-border);
    min-height: var(--target-size);
    transition:
      color var(--transition-duration-normal) ease,
      text-decoration var(--transition-duration-normal) ease;
    &.active,
    &:hover,
    &:focus {
      color: var(--color-interaction-default);
      background-color: var(--color-surface);
    }
    &.active {
      pointer-events: none;
    }
  }

  @media (min-width: 768px) {
    .nav-link {
      font-size: var(--fs-paragraph-2);
      letter-spacing: 0.03em;
      padding: calc(var(--grid-unit) / 2) calc(var(--grid-unit));
      text-underline-offset: 6px;
      text-decoration-color: transparent;
      text-decoration-thickness: 2px;
      border-bottom: 0;
      &.active,
      &:hover,
      &:focus {
        color: var(--color-interaction-default);
        text-decoration-color: revert;
        background-color: transparent;
      }
    }

    .site-header {
      padding: calc(var(--grid-unit) * 3) 0;
    }
    .header-content {
      display: flex;
      flex-wrap: wrap;
      gap: calc(var(--grid-unit) * 2);
      padding: 0 var(--content-padding);
    }
    .mobile-only {
      display: none !important;
    }
    .search-container {
      margin: calc(var(--grid-unit) * 10) auto calc(var(--grid-unit) * 4) auto;
    }
    .search-results {
      padding: calc(var(--grid-unit) * 3) calc(var(--grid-unit) * 4)
        calc(var(--grid-unit) * 4) calc(var(--grid-unit) * 4);
      &-header {
        padding: calc(var(--grid-unit) * 3) calc(var(--grid-unit) * 4);
        margin: calc(var(--grid-unit) * -3) calc(var(--grid-unit) * -4)
          calc(var(--grid-unit) * 3) calc(var(--grid-unit) * -4);
      }
    }
  }
</style>
